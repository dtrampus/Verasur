{% extends '::base.html.twig' %}

{% block content %}
    <div class="row">
        <div class="col-xs-12 col-sm-7 col-md-7 col-lg-4">
            <h1 class="page-title txt-color-blueDark"><i class="fa fa-desktop fa-fw "></i> Gestión de Ingresos <span>&gt; Descarga </span></h1>
        </div>
    </div>

    <div class="row">
        <article class="col-sm-12 col-md-12 col-lg-12">
            <!-- Widget ID (each widget will need unique ID)-->
            <div class="jarviswidget" id="wid-id-0" data-widget-colorbutton="false" data-widget-editbutton="false">
                <!-- widget options:
                usage: <div class="jarviswidget" id="wid-id-0" data-widget-editbutton="false">

                data-widget-colorbutton="false"
                data-widget-editbutton="false"
                data-widget-togglebutton="false"
                data-widget-deletebutton="false"
                data-widget-fullscreenbutton="false"
                data-widget-custombutton="false"
                data-widget-collapsed="true"
                data-widget-sortable="false"

                -->
                <header>
                    <span class="widget-icon"> <i class="fa fa-sign-in"></i> </span>
                    <h2>Formulario de descarga</h2>
                </header>

                <!-- widget div-->
                <div>
                    <!-- widget edit box -->
                    <div class="jarviswidget-editbox">
                        <!-- This area used as dropdown edit box -->
                    </div>
                    <!-- end widget edit box -->

                    <!-- widget content -->
                    <div class="widget-body">
                        <p>Total a descargar: {{ ingressInfo.realLiter }} litros.</p>
                        <form id="download-form" action="{{ path('ingress_createDownload') }}" method="POST">
                            <input type="hidden" name="ingressId" value="{{ ingressInfo.id }}">
                            <div class="form-group">
                                <label>Tanque 1:</label>
                                <select class="form-control tanque1" id="tanque1" name="tanque1">
                                    <option value=""></option>
                                    {% for entity in entities %}
                                        <option value="{{ entity.id }}">{{ entity.code }}-{{ entity.description }}</option>
                                    {% endfor %}
                                </select>
                            </div>

                            <div class="form-group">
                                <label>Cantidad:</label>
                                <input class="form-control cantidad1" type="text" name="cantidad1">
                                <span id="cantidad1"></span><br>
                                <span id="msg-error1"></span>
                            </div>

                            <div class="form-group">
                                <label>Tanque 2:</label>
                                <select class="form-control tanque2" id="tanque2" name="tanque2">
                                    <option value=""></option>
                                    {% for entity in entities %}
                                        <option value="{{ entity.id }}">{{ entity.code }}-{{ entity.description }}</option>
                                    {% endfor %}
                                </select>
                            </div>

                            <div class="form-group">
                                <label>Cantidad:</label>
                                <input class="form-control cantidad2" type="text" name="cantidad2">
                                <span id="cantidad2"></span><br>
                                <span id="msg-error2"></span>
                            </div>
                            <br>
                            <input class="btn btn-primary" type="submit" id="submitform">
                        </form>
                    </div>
                    <!-- end widget content -->

                </div>
                <!-- end widget div -->

            </div>
            <!-- end widget -->
        </article>
    </div>
{% endblock %}


{% block javascripts %}
    {{ parent() }}
    {% javascripts 'SmartAdmin/js/plugin/jquery-validate/jquery.validate.min.js' %}
    <script src="{{ asset_url }}" type="text/javascript"></script>
    {% endjavascripts %}

    <script type="text/javascript">
        $(document).ready(function () {
            $('#submitform').prop('disabled', true);
            $('.cantidad2').prop('readonly', true);
            
            jQuery.validator.addMethod("notEqual", function(value, element, param) {
                return $('#tanque1').val() != $('#tanque2').val();
            }, "Los tanques son iguales");
            
            $('#download-form').validate({
                highlight: function(element) {
                    $(element).closest('.form-group').addClass('has-error');
                },
                unhighlight: function(element) {
                    $(element).closest('.form-group').removeClass('has-error');
                },
                errorElement: 'span',
                errorClass: 'help-block',
                errorPlacement: function(error, element) {
                    if(element.parent('.input-group').length) {
                        error.insertAfter(element.parent());
                    } else {
                        error.insertAfter(element);
                    }
                },
                rules: {
                    tanque1 : {
                        required : true,
                        notEqual : true
                    },
                    cantidad1 : {
                        required : true,
                        number : true
                    },
                    tanque2 : {
                        required : false,
                        notEqual : true
                    }
                },
                messages: {
                    tanque1 : {
                        required : "Este campo es requerido"
                    },
                    cantidad1:{
                        required : "Este campo es requerido",
                        number : "El valor ingresado debe ser un número"
                    }
                }
            });
            
            $(".tanque1").change(function () {
                var value = $(".tanque1 option:selected").val();
                if (value != 0) {
                    $.ajax({
                        type: 'GET',
                        url: Routing.generate('calculateCapacity', {id: value}),
                        dataType: "json",
                        success: function (jsonTank) {
                            $('#cantidad1').html("<span class='help-block'>Capacidad disponible en el tanque: " + jsonTank['tankFreeCapacity'] + "</span>");
                            if($('.cantidad1').val() > jsonTank['tankFreeCapacity']){
                                $("#msg-error1").html("<span class='text-danger'>La cantidad ingresada no puede superar a la cantidad disponible en el tanque!</span>");
                                $('#submitform').prop('disabled', true);
                            } else {
                                $("#msg-error1").html("");
                                $('#submitform').prop('disabled', false);
                            }
                        }
                    });
                } else {
                    $('#cantidad1').html("");
                }
            });

            $(".tanque2").change(function () {
                var value = $(".tanque2 option:selected").val();
                if (value != "") {
                    $.ajax({
                        type: 'GET',
                        url: Routing.generate('calculateCapacity', {id: value}),
                        dataType: "json",
                        success: function (jsonTank) {
                            $('#cantidad2').html("<span class='help-block'>Capacidad disponible en el tanque: " + jsonTank['tankFreeCapacity'] + "</span>");
                            if($('.cantidad2').val() > jsonTank['tankFreeCapacity']){
                                $("#msg-error2").html("<span class='text-danger'>La cantidad ingresada no puede superar a la cantidad disponible en el tanque!</span>");
                                $('#submitform').prop('disabled', true);
                            } else {
                                $("#msg-error2").html("");
                                $('#submitform').prop('disabled', false);
                            }
                        }
                    });
                } else {
                    $('#cantidad2').html("");
                    $('.cantidad1').val({{ingressInfo.realLiter}});
                    $('.cantidad2').val("");
                }
            });

            //validaciones para descargar un ingreso en los tanques
            $(".cantidad1").focusout(function () {
                var ingressQuantity = {{ ingressInfo.realLiter }};
                var quantity1 = $(".cantidad1").val();
                var value = $(".tanque1 option:selected").val();
                if (quantity1 == ""){
                    quantity1 = 0;
                    $('.cantidad1').val("0.00");
                }
                $.ajax({
                    type: 'GET',
                    url: Routing.generate('calculateCapacity', {id: value}),
                    dataType: "json",
                    success: function (jsonTank) {
                        var freeCapacity = jsonTank['tankFreeCapacity'];
                        if (quantity1 <= freeCapacity && quantity1 <= ingressQuantity) {
                            $("#msg-error1").html("");
                            var rest = ingressQuantity - quantity1;
                            var cant1Redondeo = parseFloat(quantity1).toFixed(2);
                            $(".cantidad1").val(cant1Redondeo);
                            if (rest == 0){
                                $(".cantidad2").val("");
                            }else{
                                var cant2Redondeo = parseFloat(rest).toFixed(2);
                                $(".cantidad2").val(cant2Redondeo);
                            }
                            
                        } else {
                            $("#msg-error1").html("<span class='text-danger'>La cantidad ingresada no puede superar a la cantidad disponible en el tanque o la cantidad del ingreso!</span>");
                            $('#submitform').prop('disabled', true);
                        }
                    }
                });

            });
        });
    </script>
{% endblock %}
